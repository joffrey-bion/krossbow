[plugins]

avast-docker-compose = { id = "com.avast.gradle.docker-compose", version.ref = "avast-docker-compose-plugin" }
binary-compatibility-validator = { id = "org.jetbrains.kotlinx.binary-compatibility-validator", version.ref = "binary-compatibility-validator-plugin" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
hildan-github-changelog = { id = "org.hildan.github.changelog", version.ref = "hildan-github-changelog-plugin" }
hildan-kotlin-publish = { id = "org.hildan.kotlin-publish", version.ref = "hildan-kotlin-publish-plugin" }
kotlin-atomicfu = { id = "org.jetbrains.kotlin.plugin.atomicfu", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
louiscad-complete-kotlin = { id = "com.louiscad.complete-kotlin", version.ref = "complete-kotlin-plugin" }
nexus-publish = { id = "io.github.gradle-nexus.publish-plugin", version.ref = "nexus-publish-plugin" }
vyarus-github-info = { id = "ru.vyarus.github-info", version.ref = "vyarus-github-info-plugin" }

[versions]

avast-docker-compose-plugin = "0.17.7"
binary-compatibility-validator-plugin = "0.16.3"
complete-kotlin-plugin = "1.1.0"
dokka = "1.9.20"
hildan-kotlin-publish-plugin = "1.6.0"
hildan-github-changelog-plugin = "2.2.0"
jackson = "2.17.2"
kotlin = "2.0.0"
kotlinx-atomicfu = "0.25.0"
kotlinx-coroutines = "1.8.1"
kotlinx-io = "0.5.1"
kotlinx-serialization = "1.7.1"
ktor = "2.3.12"
moshi = "1.15.1"
nexus-publish-plugin = "2.0.0"
okhttp = "4.12.0"
slf4j = "2.0.16"
spring = "6.1.12"
tyrus = "2.2.0"
uuid = "0.8.4"
vyarus-github-info-plugin = "2.0.0"

npm-sockjs-client = "1.6.1"

# test-only
java-websocket = "1.5.7"
jetty-websocket = "11.0.22"
npm-isomorphic-fetch = "3.0.0"
npm-isomorphic-ws = "5.0.0"
npm-ws = "8.10.0"
slf4jTest = "1.2.0"

[libraries]

jackson-bom = { module = "com.fasterxml.jackson:jackson-bom", version.ref = "jackson" }
jackson-core = { module = "com.fasterxml.jackson.core:jackson-core" }
jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin" }
java-websocket = { module = "org.java-websocket:Java-WebSocket", version.ref = "java-websocket" }
jettyWebsocketCient = { module = "org.eclipse.jetty.websocket:websocket-jetty-client", version.ref = "jetty-websocket" }
kotlinx-atomicfu = { module = "org.jetbrains.kotlinx:atomicfu", version.ref = "kotlinx-atomicfu" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }
kotlinx-io-core = { module = "org.jetbrains.kotlinx:kotlinx-io-core", version.ref = "kotlinx-io" }
kotlinx-io-bytestring = { module = "org.jetbrains.kotlinx:kotlinx-io-bytestring", version.ref = "kotlinx-io" }
kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinx-serialization" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
ktor-client-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-java = { module = "io.ktor:ktor-client-java", version.ref = "ktor" }
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-websockets = { module = "io.ktor:ktor-client-websockets", version.ref = "ktor" }
ktor-client-winhttp = { module = "io.ktor:ktor-client-winhttp", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
moshi = { module = "com.squareup.moshi:moshi", version.ref = "moshi" }
moshiKotlin = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshi" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
slf4j-simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }
slf4j-test = { module = "uk.org.lidalia:slf4j-test", version.ref = "slf4jTest" }
spring-websocket = { module = "org.springframework:spring-websocket", version.ref = "spring" }
tyrusStandaloneClient = { module = "org.glassfish.tyrus.bundles:tyrus-standalone-client-jdk", version.ref = "tyrus" }
uuid = { module = "com.benasher44:uuid", version.ref = "uuid" }
