public class org/hildan/krossbow/stomp/ConnectionException : java/lang/Exception {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getUrl ()Ljava/lang/String;
}

public final class org/hildan/krossbow/stomp/ConnectionTimeout : org/hildan/krossbow/stomp/ConnectionException {
	public synthetic fun <init> (Ljava/lang/String;JLkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class org/hildan/krossbow/stomp/LostReceiptException : java/lang/Exception {
	public synthetic fun <init> (Ljava/lang/String;JLorg/hildan/krossbow/stomp/frame/StompFrame;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getConfiguredTimeout-UwyO8pc ()J
	public final fun getFrame ()Lorg/hildan/krossbow/stomp/frame/StompFrame;
	public final fun getReceiptId ()Ljava/lang/String;
}

public final class org/hildan/krossbow/stomp/MissingHeartBeatException : java/lang/Exception {
	public synthetic fun <init> (JLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getExpectedPeriod-UwyO8pc ()J
}

public final class org/hildan/krossbow/stomp/SessionDisconnectedException : java/lang/Exception {
	public fun <init> (Ljava/lang/String;)V
}

public final class org/hildan/krossbow/stomp/StompClient {
	public fun <init> (Lorg/hildan/krossbow/websocket/WebSocketClient;Lkotlin/jvm/functions/Function1;)V
	public synthetic fun <init> (Lorg/hildan/krossbow/websocket/WebSocketClient;Lkotlin/jvm/functions/Function1;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun <init> (Lorg/hildan/krossbow/websocket/WebSocketClient;Lorg/hildan/krossbow/stomp/config/StompConfig;)V
	public final fun connect (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun connect$default (Lorg/hildan/krossbow/stomp/StompClient;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public final class org/hildan/krossbow/stomp/StompClientKt {
	public static final synthetic fun stomp (Lorg/hildan/krossbow/websocket/WebSocketConnection;Lorg/hildan/krossbow/stomp/config/StompConfig;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun stomp$default (Lorg/hildan/krossbow/websocket/WebSocketConnection;Lorg/hildan/krossbow/stomp/config/StompConfig;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public final class org/hildan/krossbow/stomp/StompConnectionException : org/hildan/krossbow/stomp/ConnectionException {
	public fun <init> (Ljava/lang/String;Ljava/lang/Throwable;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/Throwable;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getHost ()Ljava/lang/String;
}

public final class org/hildan/krossbow/stomp/StompErrorFrameReceived : java/lang/Exception {
	public fun <init> (Lorg/hildan/krossbow/stomp/frame/StompFrame$Error;)V
	public final fun getFrame ()Lorg/hildan/krossbow/stomp/frame/StompFrame$Error;
}

public final class org/hildan/krossbow/stomp/StompReceipt {
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lorg/hildan/krossbow/stomp/StompReceipt;
	public static synthetic fun copy$default (Lorg/hildan/krossbow/stomp/StompReceipt;Ljava/lang/String;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/StompReceipt;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getId ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class org/hildan/krossbow/stomp/StompSession {
	public fun abort (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun ack (Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun ack$default (Lorg/hildan/krossbow/stomp/StompSession;Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public fun begin (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun commit (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun disconnect (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun nack (Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun nack$default (Lorg/hildan/krossbow/stomp/StompSession;Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public abstract fun send (Lorg/hildan/krossbow/stomp/headers/StompSendHeaders;Lorg/hildan/krossbow/stomp/frame/FrameBody;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun sendRawFrameAndMaybeAwaitReceipt (Lorg/hildan/krossbow/stomp/frame/StompFrame;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun subscribe (Lorg/hildan/krossbow/stomp/headers/StompSubscribeHeaders;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class org/hildan/krossbow/stomp/StompSession$DefaultImpls {
	public static fun abort (Lorg/hildan/krossbow/stomp/StompSession;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun ack (Lorg/hildan/krossbow/stomp/StompSession;Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun ack$default (Lorg/hildan/krossbow/stomp/StompSession;Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static fun begin (Lorg/hildan/krossbow/stomp/StompSession;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun commit (Lorg/hildan/krossbow/stomp/StompSession;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun nack (Lorg/hildan/krossbow/stomp/StompSession;Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun nack$default (Lorg/hildan/krossbow/stomp/StompSession;Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public final class org/hildan/krossbow/stomp/StompSessionKt {
	public static final fun sendBinary (Lorg/hildan/krossbow/stomp/StompSession;Ljava/lang/String;Lkotlinx/io/bytestring/ByteString;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun sendEmptyMsg (Lorg/hildan/krossbow/stomp/StompSession;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun sendText (Lorg/hildan/krossbow/stomp/StompSession;Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun subscribe (Lorg/hildan/krossbow/stomp/StompSession;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun subscribeBinary (Lorg/hildan/krossbow/stomp/StompSession;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun subscribeText (Lorg/hildan/krossbow/stomp/StompSession;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun use (Lorg/hildan/krossbow/stomp/StompSession;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun withTransaction (Lorg/hildan/krossbow/stomp/StompSession;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class org/hildan/krossbow/stomp/StompWsExtensionsKt {
	public static final fun stomp (Lorg/hildan/krossbow/websocket/WebSocketConnection;Lorg/hildan/krossbow/stomp/config/StompConfig;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun stomp$default (Lorg/hildan/krossbow/websocket/WebSocketConnection;Lorg/hildan/krossbow/stomp/config/StompConfig;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public abstract interface annotation class org/hildan/krossbow/stomp/UnsafeStompSessionApi : java/lang/annotation/Annotation {
}

public final class org/hildan/krossbow/stomp/WebSocketClosedUnexpectedly : java/lang/Exception {
	public fun <init> (ILjava/lang/String;)V
	public final fun getCode ()I
	public final fun getReason ()Ljava/lang/String;
}

public class org/hildan/krossbow/stomp/WebSocketConnectionException : org/hildan/krossbow/stomp/ConnectionException {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class org/hildan/krossbow/stomp/config/HeartBeat {
	public synthetic fun <init> (JJILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun <init> (JJLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1-UwyO8pc ()J
	public final fun component2-UwyO8pc ()J
	public final fun copy-QTBD994 (JJ)Lorg/hildan/krossbow/stomp/config/HeartBeat;
	public static synthetic fun copy-QTBD994$default (Lorg/hildan/krossbow/stomp/config/HeartBeat;JJILjava/lang/Object;)Lorg/hildan/krossbow/stomp/config/HeartBeat;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getExpectedPeriod-UwyO8pc ()J
	public final fun getMinSendPeriod-UwyO8pc ()J
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/hildan/krossbow/stomp/config/HeartBeatTolerance {
	public synthetic fun <init> (JJILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun <init> (JJLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1-UwyO8pc ()J
	public final fun component2-UwyO8pc ()J
	public final fun copy-QTBD994 (JJ)Lorg/hildan/krossbow/stomp/config/HeartBeatTolerance;
	public static synthetic fun copy-QTBD994$default (Lorg/hildan/krossbow/stomp/config/HeartBeatTolerance;JJILjava/lang/Object;)Lorg/hildan/krossbow/stomp/config/HeartBeatTolerance;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getIncomingMargin-UwyO8pc ()J
	public final fun getOutgoingMargin-UwyO8pc ()J
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/hildan/krossbow/stomp/config/StompConfig {
	public fun <init> ()V
	public final fun getAutoContentLength ()Z
	public final fun getAutoReceipt ()Z
	public final fun getConnectWithStompCommand ()Z
	public final fun getConnectionTimeout-UwyO8pc ()J
	public final fun getDefaultSessionCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public final fun getDisconnectTimeout-UwyO8pc ()J
	public final fun getFailOnStompVersionMismatch ()Z
	public final fun getGracefulDisconnect ()Z
	public final fun getHeartBeat ()Lorg/hildan/krossbow/stomp/config/HeartBeat;
	public final fun getHeartBeatTolerance ()Lorg/hildan/krossbow/stomp/config/HeartBeatTolerance;
	public final fun getInstrumentation ()Lorg/hildan/krossbow/stomp/instrumentation/KrossbowInstrumentation;
	public final fun getReceiptTimeout-UwyO8pc ()J
	public final fun getSubscriptionCompletionTimeout-UwyO8pc ()J
	public final fun setAutoContentLength (Z)V
	public final fun setAutoReceipt (Z)V
	public final fun setConnectWithStompCommand (Z)V
	public final fun setConnectionTimeout-LRDsOJo (J)V
	public final fun setDefaultSessionCoroutineContext (Lkotlin/coroutines/CoroutineContext;)V
	public final fun setDisconnectTimeout-LRDsOJo (J)V
	public final fun setFailOnStompVersionMismatch (Z)V
	public final fun setGracefulDisconnect (Z)V
	public final fun setHeartBeat (Lorg/hildan/krossbow/stomp/config/HeartBeat;)V
	public final fun setHeartBeatTolerance (Lorg/hildan/krossbow/stomp/config/HeartBeatTolerance;)V
	public final fun setInstrumentation (Lorg/hildan/krossbow/stomp/instrumentation/KrossbowInstrumentation;)V
	public final fun setReceiptTimeout-LRDsOJo (J)V
	public final fun setSubscriptionCompletionTimeout-LRDsOJo (J)V
}

public final class org/hildan/krossbow/stomp/conversions/KTypeRef {
	public fun <init> (Lkotlin/reflect/KType;)V
	public final fun getKType ()Lkotlin/reflect/KType;
}

public abstract interface class org/hildan/krossbow/stomp/conversions/TypedStompSession : org/hildan/krossbow/stomp/StompSession {
	public abstract fun convertAndSend (Lorg/hildan/krossbow/stomp/headers/StompSendHeaders;Ljava/lang/Object;Lorg/hildan/krossbow/stomp/conversions/KTypeRef;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun subscribe (Lorg/hildan/krossbow/stomp/headers/StompSubscribeHeaders;Lorg/hildan/krossbow/stomp/conversions/KTypeRef;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class org/hildan/krossbow/stomp/conversions/TypedStompSession$DefaultImpls {
	public static fun abort (Lorg/hildan/krossbow/stomp/conversions/TypedStompSession;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun ack (Lorg/hildan/krossbow/stomp/conversions/TypedStompSession;Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun begin (Lorg/hildan/krossbow/stomp/conversions/TypedStompSession;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun commit (Lorg/hildan/krossbow/stomp/conversions/TypedStompSession;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun nack (Lorg/hildan/krossbow/stomp/conversions/TypedStompSession;Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class org/hildan/krossbow/stomp/conversions/text/TextConversionsKt {
	public static final fun withTextConversions (Lorg/hildan/krossbow/stomp/StompSession;Lorg/hildan/krossbow/stomp/conversions/text/TextMessageConverter;)Lorg/hildan/krossbow/stomp/conversions/TypedStompSession;
}

public abstract interface class org/hildan/krossbow/stomp/conversions/text/TextMessageConverter {
	public abstract fun convertFromString (Ljava/lang/String;Lorg/hildan/krossbow/stomp/conversions/KTypeRef;)Ljava/lang/Object;
	public abstract fun convertToString (Ljava/lang/Object;Lorg/hildan/krossbow/stomp/conversions/KTypeRef;)Ljava/lang/String;
	public abstract fun getMediaType ()Ljava/lang/String;
}

public abstract class org/hildan/krossbow/stomp/frame/FrameBody {
	public abstract fun getBytes ()Lkotlinx/io/bytestring/ByteString;
}

public final class org/hildan/krossbow/stomp/frame/FrameBody$Binary : org/hildan/krossbow/stomp/frame/FrameBody {
	public fun <init> (Lkotlinx/io/bytestring/ByteString;)V
	public final fun component1 ()Lkotlinx/io/bytestring/ByteString;
	public final fun copy (Lkotlinx/io/bytestring/ByteString;)Lorg/hildan/krossbow/stomp/frame/FrameBody$Binary;
	public static synthetic fun copy$default (Lorg/hildan/krossbow/stomp/frame/FrameBody$Binary;Lkotlinx/io/bytestring/ByteString;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/frame/FrameBody$Binary;
	public fun equals (Ljava/lang/Object;)Z
	public fun getBytes ()Lkotlinx/io/bytestring/ByteString;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/hildan/krossbow/stomp/frame/FrameBody$Text : org/hildan/krossbow/stomp/frame/FrameBody {
	public fun <init> (Ljava/lang/String;)V
	public fun <init> (Lkotlinx/io/bytestring/ByteString;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lorg/hildan/krossbow/stomp/frame/FrameBody$Text;
	public static synthetic fun copy$default (Lorg/hildan/krossbow/stomp/frame/FrameBody$Text;Ljava/lang/String;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/frame/FrameBody$Text;
	public fun equals (Ljava/lang/Object;)Z
	public fun getBytes ()Lkotlinx/io/bytestring/ByteString;
	public final fun getText ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/hildan/krossbow/stomp/frame/InvalidStompCommandException : java/lang/Exception {
	public fun <init> (Ljava/lang/String;)V
	public final fun getInvalidText ()Ljava/lang/String;
}

public final class org/hildan/krossbow/stomp/frame/InvalidStompFrameException : java/lang/Exception {
	public fun <init> (Ljava/lang/Throwable;)V
}

public final class org/hildan/krossbow/stomp/frame/StompCommand : java/lang/Enum {
	public static final field ABORT Lorg/hildan/krossbow/stomp/frame/StompCommand;
	public static final field ACK Lorg/hildan/krossbow/stomp/frame/StompCommand;
	public static final field BEGIN Lorg/hildan/krossbow/stomp/frame/StompCommand;
	public static final field COMMIT Lorg/hildan/krossbow/stomp/frame/StompCommand;
	public static final field CONNECT Lorg/hildan/krossbow/stomp/frame/StompCommand;
	public static final field CONNECTED Lorg/hildan/krossbow/stomp/frame/StompCommand;
	public static final field Companion Lorg/hildan/krossbow/stomp/frame/StompCommand$Companion;
	public static final field DISCONNECT Lorg/hildan/krossbow/stomp/frame/StompCommand;
	public static final field ERROR Lorg/hildan/krossbow/stomp/frame/StompCommand;
	public static final field MESSAGE Lorg/hildan/krossbow/stomp/frame/StompCommand;
	public static final field NACK Lorg/hildan/krossbow/stomp/frame/StompCommand;
	public static final field RECEIPT Lorg/hildan/krossbow/stomp/frame/StompCommand;
	public static final field SEND Lorg/hildan/krossbow/stomp/frame/StompCommand;
	public static final field STOMP Lorg/hildan/krossbow/stomp/frame/StompCommand;
	public static final field SUBSCRIBE Lorg/hildan/krossbow/stomp/frame/StompCommand;
	public static final field UNSUBSCRIBE Lorg/hildan/krossbow/stomp/frame/StompCommand;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lorg/hildan/krossbow/stomp/frame/StompCommand;
	public static fun values ()[Lorg/hildan/krossbow/stomp/frame/StompCommand;
}

public final class org/hildan/krossbow/stomp/frame/StompCommand$Companion {
}

public abstract class org/hildan/krossbow/stomp/frame/StompEvent {
}

public abstract class org/hildan/krossbow/stomp/frame/StompFrame : org/hildan/krossbow/stomp/frame/StompEvent {
	public static final field Companion Lorg/hildan/krossbow/stomp/frame/StompFrame$Companion;
	public synthetic fun <init> (Lorg/hildan/krossbow/stomp/frame/StompCommand;Lorg/hildan/krossbow/stomp/headers/StompHeaders;Lorg/hildan/krossbow/stomp/frame/FrameBody;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun <init> (Lorg/hildan/krossbow/stomp/frame/StompCommand;Lorg/hildan/krossbow/stomp/headers/StompHeaders;Lorg/hildan/krossbow/stomp/frame/FrameBody;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getBody ()Lorg/hildan/krossbow/stomp/frame/FrameBody;
	public final fun getBodyAsText ()Ljava/lang/String;
	public final fun getCommand ()Lorg/hildan/krossbow/stomp/frame/StompCommand;
	public fun getHeaders ()Lorg/hildan/krossbow/stomp/headers/StompHeaders;
}

public final class org/hildan/krossbow/stomp/frame/StompFrame$Abort : org/hildan/krossbow/stomp/frame/StompFrame {
	public fun <init> (Lorg/hildan/krossbow/stomp/headers/StompAbortHeaders;)V
	public final fun component1 ()Lorg/hildan/krossbow/stomp/headers/StompAbortHeaders;
	public final fun copy (Lorg/hildan/krossbow/stomp/headers/StompAbortHeaders;)Lorg/hildan/krossbow/stomp/frame/StompFrame$Abort;
	public static synthetic fun copy$default (Lorg/hildan/krossbow/stomp/frame/StompFrame$Abort;Lorg/hildan/krossbow/stomp/headers/StompAbortHeaders;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/frame/StompFrame$Abort;
	public fun equals (Ljava/lang/Object;)Z
	public fun getHeaders ()Lorg/hildan/krossbow/stomp/headers/StompAbortHeaders;
	public synthetic fun getHeaders ()Lorg/hildan/krossbow/stomp/headers/StompHeaders;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/hildan/krossbow/stomp/frame/StompFrame$Ack : org/hildan/krossbow/stomp/frame/StompFrame {
	public fun <init> (Lorg/hildan/krossbow/stomp/headers/StompAckHeaders;)V
	public final fun component1 ()Lorg/hildan/krossbow/stomp/headers/StompAckHeaders;
	public final fun copy (Lorg/hildan/krossbow/stomp/headers/StompAckHeaders;)Lorg/hildan/krossbow/stomp/frame/StompFrame$Ack;
	public static synthetic fun copy$default (Lorg/hildan/krossbow/stomp/frame/StompFrame$Ack;Lorg/hildan/krossbow/stomp/headers/StompAckHeaders;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/frame/StompFrame$Ack;
	public fun equals (Ljava/lang/Object;)Z
	public fun getHeaders ()Lorg/hildan/krossbow/stomp/headers/StompAckHeaders;
	public synthetic fun getHeaders ()Lorg/hildan/krossbow/stomp/headers/StompHeaders;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/hildan/krossbow/stomp/frame/StompFrame$Begin : org/hildan/krossbow/stomp/frame/StompFrame {
	public fun <init> (Lorg/hildan/krossbow/stomp/headers/StompBeginHeaders;)V
	public final fun component1 ()Lorg/hildan/krossbow/stomp/headers/StompBeginHeaders;
	public final fun copy (Lorg/hildan/krossbow/stomp/headers/StompBeginHeaders;)Lorg/hildan/krossbow/stomp/frame/StompFrame$Begin;
	public static synthetic fun copy$default (Lorg/hildan/krossbow/stomp/frame/StompFrame$Begin;Lorg/hildan/krossbow/stomp/headers/StompBeginHeaders;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/frame/StompFrame$Begin;
	public fun equals (Ljava/lang/Object;)Z
	public fun getHeaders ()Lorg/hildan/krossbow/stomp/headers/StompBeginHeaders;
	public synthetic fun getHeaders ()Lorg/hildan/krossbow/stomp/headers/StompHeaders;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/hildan/krossbow/stomp/frame/StompFrame$Commit : org/hildan/krossbow/stomp/frame/StompFrame {
	public fun <init> (Lorg/hildan/krossbow/stomp/headers/StompCommitHeaders;)V
	public final fun component1 ()Lorg/hildan/krossbow/stomp/headers/StompCommitHeaders;
	public final fun copy (Lorg/hildan/krossbow/stomp/headers/StompCommitHeaders;)Lorg/hildan/krossbow/stomp/frame/StompFrame$Commit;
	public static synthetic fun copy$default (Lorg/hildan/krossbow/stomp/frame/StompFrame$Commit;Lorg/hildan/krossbow/stomp/headers/StompCommitHeaders;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/frame/StompFrame$Commit;
	public fun equals (Ljava/lang/Object;)Z
	public fun getHeaders ()Lorg/hildan/krossbow/stomp/headers/StompCommitHeaders;
	public synthetic fun getHeaders ()Lorg/hildan/krossbow/stomp/headers/StompHeaders;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/hildan/krossbow/stomp/frame/StompFrame$Companion {
}

public final class org/hildan/krossbow/stomp/frame/StompFrame$Connect : org/hildan/krossbow/stomp/frame/StompFrame {
	public fun <init> (Lorg/hildan/krossbow/stomp/headers/StompConnectHeaders;)V
	public final fun component1 ()Lorg/hildan/krossbow/stomp/headers/StompConnectHeaders;
	public final fun copy (Lorg/hildan/krossbow/stomp/headers/StompConnectHeaders;)Lorg/hildan/krossbow/stomp/frame/StompFrame$Connect;
	public static synthetic fun copy$default (Lorg/hildan/krossbow/stomp/frame/StompFrame$Connect;Lorg/hildan/krossbow/stomp/headers/StompConnectHeaders;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/frame/StompFrame$Connect;
	public fun equals (Ljava/lang/Object;)Z
	public fun getHeaders ()Lorg/hildan/krossbow/stomp/headers/StompConnectHeaders;
	public synthetic fun getHeaders ()Lorg/hildan/krossbow/stomp/headers/StompHeaders;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/hildan/krossbow/stomp/frame/StompFrame$Connected : org/hildan/krossbow/stomp/frame/StompFrame {
	public fun <init> (Lorg/hildan/krossbow/stomp/headers/StompConnectedHeaders;)V
	public final fun component1 ()Lorg/hildan/krossbow/stomp/headers/StompConnectedHeaders;
	public final fun copy (Lorg/hildan/krossbow/stomp/headers/StompConnectedHeaders;)Lorg/hildan/krossbow/stomp/frame/StompFrame$Connected;
	public static synthetic fun copy$default (Lorg/hildan/krossbow/stomp/frame/StompFrame$Connected;Lorg/hildan/krossbow/stomp/headers/StompConnectedHeaders;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/frame/StompFrame$Connected;
	public fun equals (Ljava/lang/Object;)Z
	public fun getHeaders ()Lorg/hildan/krossbow/stomp/headers/StompConnectedHeaders;
	public synthetic fun getHeaders ()Lorg/hildan/krossbow/stomp/headers/StompHeaders;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/hildan/krossbow/stomp/frame/StompFrame$Disconnect : org/hildan/krossbow/stomp/frame/StompFrame {
	public fun <init> (Lorg/hildan/krossbow/stomp/headers/StompDisconnectHeaders;)V
	public final fun component1 ()Lorg/hildan/krossbow/stomp/headers/StompDisconnectHeaders;
	public final fun copy (Lorg/hildan/krossbow/stomp/headers/StompDisconnectHeaders;)Lorg/hildan/krossbow/stomp/frame/StompFrame$Disconnect;
	public static synthetic fun copy$default (Lorg/hildan/krossbow/stomp/frame/StompFrame$Disconnect;Lorg/hildan/krossbow/stomp/headers/StompDisconnectHeaders;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/frame/StompFrame$Disconnect;
	public fun equals (Ljava/lang/Object;)Z
	public fun getHeaders ()Lorg/hildan/krossbow/stomp/headers/StompDisconnectHeaders;
	public synthetic fun getHeaders ()Lorg/hildan/krossbow/stomp/headers/StompHeaders;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/hildan/krossbow/stomp/frame/StompFrame$Error : org/hildan/krossbow/stomp/frame/StompFrame {
	public fun <init> (Lorg/hildan/krossbow/stomp/headers/StompErrorHeaders;Lorg/hildan/krossbow/stomp/frame/FrameBody;)V
	public final fun component1 ()Lorg/hildan/krossbow/stomp/headers/StompErrorHeaders;
	public final fun component2 ()Lorg/hildan/krossbow/stomp/frame/FrameBody;
	public final fun copy (Lorg/hildan/krossbow/stomp/headers/StompErrorHeaders;Lorg/hildan/krossbow/stomp/frame/FrameBody;)Lorg/hildan/krossbow/stomp/frame/StompFrame$Error;
	public static synthetic fun copy$default (Lorg/hildan/krossbow/stomp/frame/StompFrame$Error;Lorg/hildan/krossbow/stomp/headers/StompErrorHeaders;Lorg/hildan/krossbow/stomp/frame/FrameBody;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/frame/StompFrame$Error;
	public fun equals (Ljava/lang/Object;)Z
	public fun getBody ()Lorg/hildan/krossbow/stomp/frame/FrameBody;
	public fun getHeaders ()Lorg/hildan/krossbow/stomp/headers/StompErrorHeaders;
	public synthetic fun getHeaders ()Lorg/hildan/krossbow/stomp/headers/StompHeaders;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/hildan/krossbow/stomp/frame/StompFrame$Message : org/hildan/krossbow/stomp/frame/StompFrame {
	public fun <init> (Lorg/hildan/krossbow/stomp/headers/StompMessageHeaders;Lorg/hildan/krossbow/stomp/frame/FrameBody;)V
	public final fun component1 ()Lorg/hildan/krossbow/stomp/headers/StompMessageHeaders;
	public final fun component2 ()Lorg/hildan/krossbow/stomp/frame/FrameBody;
	public final fun copy (Lorg/hildan/krossbow/stomp/headers/StompMessageHeaders;Lorg/hildan/krossbow/stomp/frame/FrameBody;)Lorg/hildan/krossbow/stomp/frame/StompFrame$Message;
	public static synthetic fun copy$default (Lorg/hildan/krossbow/stomp/frame/StompFrame$Message;Lorg/hildan/krossbow/stomp/headers/StompMessageHeaders;Lorg/hildan/krossbow/stomp/frame/FrameBody;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/frame/StompFrame$Message;
	public fun equals (Ljava/lang/Object;)Z
	public fun getBody ()Lorg/hildan/krossbow/stomp/frame/FrameBody;
	public synthetic fun getHeaders ()Lorg/hildan/krossbow/stomp/headers/StompHeaders;
	public fun getHeaders ()Lorg/hildan/krossbow/stomp/headers/StompMessageHeaders;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/hildan/krossbow/stomp/frame/StompFrame$Nack : org/hildan/krossbow/stomp/frame/StompFrame {
	public fun <init> (Lorg/hildan/krossbow/stomp/headers/StompNackHeaders;)V
	public final fun component1 ()Lorg/hildan/krossbow/stomp/headers/StompNackHeaders;
	public final fun copy (Lorg/hildan/krossbow/stomp/headers/StompNackHeaders;)Lorg/hildan/krossbow/stomp/frame/StompFrame$Nack;
	public static synthetic fun copy$default (Lorg/hildan/krossbow/stomp/frame/StompFrame$Nack;Lorg/hildan/krossbow/stomp/headers/StompNackHeaders;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/frame/StompFrame$Nack;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getHeaders ()Lorg/hildan/krossbow/stomp/headers/StompHeaders;
	public fun getHeaders ()Lorg/hildan/krossbow/stomp/headers/StompNackHeaders;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/hildan/krossbow/stomp/frame/StompFrame$Receipt : org/hildan/krossbow/stomp/frame/StompFrame {
	public fun <init> (Lorg/hildan/krossbow/stomp/headers/StompReceiptHeaders;)V
	public final fun component1 ()Lorg/hildan/krossbow/stomp/headers/StompReceiptHeaders;
	public final fun copy (Lorg/hildan/krossbow/stomp/headers/StompReceiptHeaders;)Lorg/hildan/krossbow/stomp/frame/StompFrame$Receipt;
	public static synthetic fun copy$default (Lorg/hildan/krossbow/stomp/frame/StompFrame$Receipt;Lorg/hildan/krossbow/stomp/headers/StompReceiptHeaders;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/frame/StompFrame$Receipt;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getHeaders ()Lorg/hildan/krossbow/stomp/headers/StompHeaders;
	public fun getHeaders ()Lorg/hildan/krossbow/stomp/headers/StompReceiptHeaders;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/hildan/krossbow/stomp/frame/StompFrame$Send : org/hildan/krossbow/stomp/frame/StompFrame {
	public fun <init> (Lorg/hildan/krossbow/stomp/headers/StompSendHeaders;Lorg/hildan/krossbow/stomp/frame/FrameBody;)V
	public final fun component1 ()Lorg/hildan/krossbow/stomp/headers/StompSendHeaders;
	public final fun component2 ()Lorg/hildan/krossbow/stomp/frame/FrameBody;
	public final fun copy (Lorg/hildan/krossbow/stomp/headers/StompSendHeaders;Lorg/hildan/krossbow/stomp/frame/FrameBody;)Lorg/hildan/krossbow/stomp/frame/StompFrame$Send;
	public static synthetic fun copy$default (Lorg/hildan/krossbow/stomp/frame/StompFrame$Send;Lorg/hildan/krossbow/stomp/headers/StompSendHeaders;Lorg/hildan/krossbow/stomp/frame/FrameBody;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/frame/StompFrame$Send;
	public fun equals (Ljava/lang/Object;)Z
	public fun getBody ()Lorg/hildan/krossbow/stomp/frame/FrameBody;
	public synthetic fun getHeaders ()Lorg/hildan/krossbow/stomp/headers/StompHeaders;
	public fun getHeaders ()Lorg/hildan/krossbow/stomp/headers/StompSendHeaders;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/hildan/krossbow/stomp/frame/StompFrame$Stomp : org/hildan/krossbow/stomp/frame/StompFrame {
	public fun <init> (Lorg/hildan/krossbow/stomp/headers/StompConnectHeaders;)V
	public final fun component1 ()Lorg/hildan/krossbow/stomp/headers/StompConnectHeaders;
	public final fun copy (Lorg/hildan/krossbow/stomp/headers/StompConnectHeaders;)Lorg/hildan/krossbow/stomp/frame/StompFrame$Stomp;
	public static synthetic fun copy$default (Lorg/hildan/krossbow/stomp/frame/StompFrame$Stomp;Lorg/hildan/krossbow/stomp/headers/StompConnectHeaders;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/frame/StompFrame$Stomp;
	public fun equals (Ljava/lang/Object;)Z
	public fun getHeaders ()Lorg/hildan/krossbow/stomp/headers/StompConnectHeaders;
	public synthetic fun getHeaders ()Lorg/hildan/krossbow/stomp/headers/StompHeaders;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/hildan/krossbow/stomp/frame/StompFrame$Subscribe : org/hildan/krossbow/stomp/frame/StompFrame {
	public fun <init> (Lorg/hildan/krossbow/stomp/headers/StompSubscribeHeaders;)V
	public final fun component1 ()Lorg/hildan/krossbow/stomp/headers/StompSubscribeHeaders;
	public final fun copy (Lorg/hildan/krossbow/stomp/headers/StompSubscribeHeaders;)Lorg/hildan/krossbow/stomp/frame/StompFrame$Subscribe;
	public static synthetic fun copy$default (Lorg/hildan/krossbow/stomp/frame/StompFrame$Subscribe;Lorg/hildan/krossbow/stomp/headers/StompSubscribeHeaders;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/frame/StompFrame$Subscribe;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getHeaders ()Lorg/hildan/krossbow/stomp/headers/StompHeaders;
	public fun getHeaders ()Lorg/hildan/krossbow/stomp/headers/StompSubscribeHeaders;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/hildan/krossbow/stomp/frame/StompFrame$Unsubscribe : org/hildan/krossbow/stomp/frame/StompFrame {
	public fun <init> (Lorg/hildan/krossbow/stomp/headers/StompUnsubscribeHeaders;)V
	public final fun component1 ()Lorg/hildan/krossbow/stomp/headers/StompUnsubscribeHeaders;
	public final fun copy (Lorg/hildan/krossbow/stomp/headers/StompUnsubscribeHeaders;)Lorg/hildan/krossbow/stomp/frame/StompFrame$Unsubscribe;
	public static synthetic fun copy$default (Lorg/hildan/krossbow/stomp/frame/StompFrame$Unsubscribe;Lorg/hildan/krossbow/stomp/headers/StompUnsubscribeHeaders;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/frame/StompFrame$Unsubscribe;
	public fun equals (Ljava/lang/Object;)Z
	public synthetic fun getHeaders ()Lorg/hildan/krossbow/stomp/headers/StompHeaders;
	public fun getHeaders ()Lorg/hildan/krossbow/stomp/headers/StompUnsubscribeHeaders;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/hildan/krossbow/stomp/headers/AckMode : java/lang/Enum {
	public static final field AUTO Lorg/hildan/krossbow/stomp/headers/AckMode;
	public static final field CLIENT Lorg/hildan/krossbow/stomp/headers/AckMode;
	public static final field CLIENT_INDIVIDUAL Lorg/hildan/krossbow/stomp/headers/AckMode;
	public static final field Companion Lorg/hildan/krossbow/stomp/headers/AckMode$Companion;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public final fun getHeaderValue ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lorg/hildan/krossbow/stomp/headers/AckMode;
	public static fun values ()[Lorg/hildan/krossbow/stomp/headers/AckMode;
}

public final class org/hildan/krossbow/stomp/headers/AckMode$Companion {
	public final fun fromHeader (Ljava/lang/String;)Lorg/hildan/krossbow/stomp/headers/AckMode;
}

public abstract interface annotation class org/hildan/krossbow/stomp/headers/ExperimentalHeadersApi : java/lang/annotation/Annotation {
}

public final class org/hildan/krossbow/stomp/headers/HeaderNames {
	public static final field ACCEPT_VERSION Ljava/lang/String;
	public static final field ACK Ljava/lang/String;
	public static final field CONTENT_LENGTH Ljava/lang/String;
	public static final field CONTENT_TYPE Ljava/lang/String;
	public static final field DESTINATION Ljava/lang/String;
	public static final field HEART_BEAT Ljava/lang/String;
	public static final field HOST Ljava/lang/String;
	public static final field ID Ljava/lang/String;
	public static final field INSTANCE Lorg/hildan/krossbow/stomp/headers/HeaderNames;
	public static final field LOGIN Ljava/lang/String;
	public static final field MESSAGE Ljava/lang/String;
	public static final field MESSAGE_ID Ljava/lang/String;
	public static final field PASSCODE Ljava/lang/String;
	public static final field RECEIPT Ljava/lang/String;
	public static final field RECEIPT_ID Ljava/lang/String;
	public static final field SERVER Ljava/lang/String;
	public static final field SESSION Ljava/lang/String;
	public static final field SUBSCRIPTION Ljava/lang/String;
	public static final field TRANSACTION Ljava/lang/String;
	public static final field VERSION Ljava/lang/String;
}

public final class org/hildan/krossbow/stomp/headers/InvalidAckHeaderException : java/lang/Exception {
	public fun <init> (Ljava/lang/String;)V
	public final fun getInvalidText ()Ljava/lang/String;
}

public final class org/hildan/krossbow/stomp/headers/InvalidEscapeException : java/lang/IllegalArgumentException {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getInvalidSequence ()Ljava/lang/String;
}

public final class org/hildan/krossbow/stomp/headers/InvalidServerHeaderException : java/lang/Exception {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public final fun getInvalidText ()Ljava/lang/String;
}

public final class org/hildan/krossbow/stomp/headers/ServerInfo {
	public static final field Companion Lorg/hildan/krossbow/stomp/headers/ServerInfo$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)Lorg/hildan/krossbow/stomp/headers/ServerInfo;
	public static synthetic fun copy$default (Lorg/hildan/krossbow/stomp/headers/ServerInfo;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/headers/ServerInfo;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getComments ()Ljava/util/List;
	public final fun getName ()Ljava/lang/String;
	public final fun getVersion ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/hildan/krossbow/stomp/headers/ServerInfo$Companion {
}

public abstract interface class org/hildan/krossbow/stomp/headers/StompAbortHeaders : org/hildan/krossbow/stomp/headers/StompHeaders {
	public abstract fun getTransaction ()Ljava/lang/String;
}

public abstract interface class org/hildan/krossbow/stomp/headers/StompAbortHeadersBuilder : org/hildan/krossbow/stomp/headers/StompAbortHeaders, org/hildan/krossbow/stomp/headers/StompHeadersBuilder {
	public abstract fun getTransaction ()Ljava/lang/String;
	public abstract fun setTransaction (Ljava/lang/String;)V
}

public final class org/hildan/krossbow/stomp/headers/StompAbortHeadersKt {
	public static final fun StompAbortHeaders (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/hildan/krossbow/stomp/headers/StompAbortHeaders;
	public static synthetic fun StompAbortHeaders$default (Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/headers/StompAbortHeaders;
	public static final fun copy (Lorg/hildan/krossbow/stomp/headers/StompAbortHeaders;Lkotlin/jvm/functions/Function1;)Lorg/hildan/krossbow/stomp/headers/StompAbortHeaders;
	public static synthetic fun copy$default (Lorg/hildan/krossbow/stomp/headers/StompAbortHeaders;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/headers/StompAbortHeaders;
}

public abstract interface class org/hildan/krossbow/stomp/headers/StompAckHeaders : org/hildan/krossbow/stomp/headers/StompHeaders {
	public abstract fun getId ()Ljava/lang/String;
	public abstract fun getTransaction ()Ljava/lang/String;
}

public abstract interface class org/hildan/krossbow/stomp/headers/StompAckHeadersBuilder : org/hildan/krossbow/stomp/headers/StompAckHeaders, org/hildan/krossbow/stomp/headers/StompHeadersBuilder {
	public abstract fun getId ()Ljava/lang/String;
	public abstract fun getTransaction ()Ljava/lang/String;
	public abstract fun setId (Ljava/lang/String;)V
	public abstract fun setTransaction (Ljava/lang/String;)V
}

public final class org/hildan/krossbow/stomp/headers/StompAckHeadersKt {
	public static final fun StompAckHeaders (Ljava/lang/String;Ljava/lang/String;)Lorg/hildan/krossbow/stomp/headers/StompAckHeaders;
	public static final fun StompAckHeaders (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/hildan/krossbow/stomp/headers/StompAckHeaders;
	public static synthetic fun StompAckHeaders$default (Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/headers/StompAckHeaders;
	public static synthetic fun StompAckHeaders$default (Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/headers/StompAckHeaders;
	public static final fun copy (Lorg/hildan/krossbow/stomp/headers/StompAckHeaders;Lkotlin/jvm/functions/Function1;)Lorg/hildan/krossbow/stomp/headers/StompAckHeaders;
	public static synthetic fun copy$default (Lorg/hildan/krossbow/stomp/headers/StompAckHeaders;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/headers/StompAckHeaders;
}

public abstract interface class org/hildan/krossbow/stomp/headers/StompBeginHeaders : org/hildan/krossbow/stomp/headers/StompHeaders {
	public abstract fun getTransaction ()Ljava/lang/String;
}

public abstract interface class org/hildan/krossbow/stomp/headers/StompBeginHeadersBuilder : org/hildan/krossbow/stomp/headers/StompBeginHeaders, org/hildan/krossbow/stomp/headers/StompHeadersBuilder {
	public abstract fun getTransaction ()Ljava/lang/String;
	public abstract fun setTransaction (Ljava/lang/String;)V
}

public final class org/hildan/krossbow/stomp/headers/StompBeginHeadersKt {
	public static final fun StompBeginHeaders (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/hildan/krossbow/stomp/headers/StompBeginHeaders;
	public static synthetic fun StompBeginHeaders$default (Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/headers/StompBeginHeaders;
	public static final fun copy (Lorg/hildan/krossbow/stomp/headers/StompBeginHeaders;Lkotlin/jvm/functions/Function1;)Lorg/hildan/krossbow/stomp/headers/StompBeginHeaders;
	public static synthetic fun copy$default (Lorg/hildan/krossbow/stomp/headers/StompBeginHeaders;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/headers/StompBeginHeaders;
}

public abstract interface class org/hildan/krossbow/stomp/headers/StompCommitHeaders : org/hildan/krossbow/stomp/headers/StompHeaders {
	public abstract fun getTransaction ()Ljava/lang/String;
}

public abstract interface class org/hildan/krossbow/stomp/headers/StompCommitHeadersBuilder : org/hildan/krossbow/stomp/headers/StompCommitHeaders, org/hildan/krossbow/stomp/headers/StompHeadersBuilder {
	public abstract fun getTransaction ()Ljava/lang/String;
	public abstract fun setTransaction (Ljava/lang/String;)V
}

public final class org/hildan/krossbow/stomp/headers/StompCommitHeadersKt {
	public static final fun StompCommitHeaders (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/hildan/krossbow/stomp/headers/StompCommitHeaders;
	public static synthetic fun StompCommitHeaders$default (Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/headers/StompCommitHeaders;
	public static final fun copy (Lorg/hildan/krossbow/stomp/headers/StompCommitHeaders;Lkotlin/jvm/functions/Function1;)Lorg/hildan/krossbow/stomp/headers/StompCommitHeaders;
	public static synthetic fun copy$default (Lorg/hildan/krossbow/stomp/headers/StompCommitHeaders;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/headers/StompCommitHeaders;
}

public abstract interface class org/hildan/krossbow/stomp/headers/StompConnectHeaders : org/hildan/krossbow/stomp/headers/StompHeaders {
	public abstract fun getAcceptVersion ()Ljava/util/List;
	public abstract fun getHeartBeat ()Lorg/hildan/krossbow/stomp/config/HeartBeat;
	public abstract fun getHost ()Ljava/lang/String;
	public abstract fun getLogin ()Ljava/lang/String;
	public abstract fun getPasscode ()Ljava/lang/String;
}

public abstract interface class org/hildan/krossbow/stomp/headers/StompConnectHeadersBuilder : org/hildan/krossbow/stomp/headers/StompConnectHeaders, org/hildan/krossbow/stomp/headers/StompHeadersBuilder {
	public abstract fun getAcceptVersion ()Ljava/util/List;
	public abstract fun getHeartBeat ()Lorg/hildan/krossbow/stomp/config/HeartBeat;
	public abstract fun getHost ()Ljava/lang/String;
	public abstract fun getLogin ()Ljava/lang/String;
	public abstract fun getPasscode ()Ljava/lang/String;
	public abstract fun setAcceptVersion (Ljava/util/List;)V
	public abstract fun setHeartBeat (Lorg/hildan/krossbow/stomp/config/HeartBeat;)V
	public abstract fun setHost (Ljava/lang/String;)V
	public abstract fun setLogin (Ljava/lang/String;)V
	public abstract fun setPasscode (Ljava/lang/String;)V
}

public final class org/hildan/krossbow/stomp/headers/StompConnectHeadersKt {
	public static final fun StompConnectHeaders (Ljava/lang/String;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Lorg/hildan/krossbow/stomp/config/HeartBeat;Ljava/util/Map;)Lorg/hildan/krossbow/stomp/headers/StompConnectHeaders;
	public static final fun StompConnectHeaders (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/hildan/krossbow/stomp/headers/StompConnectHeaders;
	public static synthetic fun StompConnectHeaders$default (Ljava/lang/String;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Lorg/hildan/krossbow/stomp/config/HeartBeat;Ljava/util/Map;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/headers/StompConnectHeaders;
	public static synthetic fun StompConnectHeaders$default (Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/headers/StompConnectHeaders;
	public static final fun copy (Lorg/hildan/krossbow/stomp/headers/StompConnectHeaders;Lkotlin/jvm/functions/Function1;)Lorg/hildan/krossbow/stomp/headers/StompConnectHeaders;
	public static synthetic fun copy$default (Lorg/hildan/krossbow/stomp/headers/StompConnectHeaders;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/headers/StompConnectHeaders;
}

public abstract interface class org/hildan/krossbow/stomp/headers/StompConnectedHeaders : org/hildan/krossbow/stomp/headers/StompHeaders {
	public abstract fun getHeartBeat ()Lorg/hildan/krossbow/stomp/config/HeartBeat;
	public abstract fun getServer ()Lorg/hildan/krossbow/stomp/headers/ServerInfo;
	public abstract fun getSession ()Ljava/lang/String;
	public abstract fun getVersion ()Ljava/lang/String;
}

public abstract interface class org/hildan/krossbow/stomp/headers/StompConnectedHeadersBuilder : org/hildan/krossbow/stomp/headers/StompConnectedHeaders, org/hildan/krossbow/stomp/headers/StompHeadersBuilder {
	public abstract fun getHeartBeat ()Lorg/hildan/krossbow/stomp/config/HeartBeat;
	public abstract fun getServer ()Lorg/hildan/krossbow/stomp/headers/ServerInfo;
	public abstract fun getSession ()Ljava/lang/String;
	public abstract fun getVersion ()Ljava/lang/String;
	public abstract fun setHeartBeat (Lorg/hildan/krossbow/stomp/config/HeartBeat;)V
	public abstract fun setServer (Lorg/hildan/krossbow/stomp/headers/ServerInfo;)V
	public abstract fun setSession (Ljava/lang/String;)V
	public abstract fun setVersion (Ljava/lang/String;)V
}

public final class org/hildan/krossbow/stomp/headers/StompConnectedHeadersKt {
	public static final fun StompConnectedHeaders (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/hildan/krossbow/stomp/config/HeartBeat;)Lorg/hildan/krossbow/stomp/headers/StompConnectedHeaders;
	public static final fun StompConnectedHeaders (Lkotlin/jvm/functions/Function1;)Lorg/hildan/krossbow/stomp/headers/StompConnectedHeaders;
	public static synthetic fun StompConnectedHeaders$default (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/hildan/krossbow/stomp/config/HeartBeat;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/headers/StompConnectedHeaders;
	public static synthetic fun StompConnectedHeaders$default (Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/headers/StompConnectedHeaders;
	public static final fun copy (Lorg/hildan/krossbow/stomp/headers/StompConnectedHeaders;Lkotlin/jvm/functions/Function1;)Lorg/hildan/krossbow/stomp/headers/StompConnectedHeaders;
	public static synthetic fun copy$default (Lorg/hildan/krossbow/stomp/headers/StompConnectedHeaders;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/headers/StompConnectedHeaders;
}

public abstract interface class org/hildan/krossbow/stomp/headers/StompDisconnectHeaders : org/hildan/krossbow/stomp/headers/StompHeaders {
}

public abstract interface class org/hildan/krossbow/stomp/headers/StompDisconnectHeadersBuilder : org/hildan/krossbow/stomp/headers/StompDisconnectHeaders, org/hildan/krossbow/stomp/headers/StompHeadersBuilder {
}

public final class org/hildan/krossbow/stomp/headers/StompDisconnectHeadersKt {
	public static final fun StompDisconnectHeaders (Ljava/lang/String;)Lorg/hildan/krossbow/stomp/headers/StompDisconnectHeaders;
	public static final fun StompDisconnectHeaders (Lkotlin/jvm/functions/Function1;)Lorg/hildan/krossbow/stomp/headers/StompDisconnectHeaders;
	public static synthetic fun StompDisconnectHeaders$default (Ljava/lang/String;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/headers/StompDisconnectHeaders;
	public static synthetic fun StompDisconnectHeaders$default (Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/headers/StompDisconnectHeaders;
	public static final fun copy (Lorg/hildan/krossbow/stomp/headers/StompDisconnectHeaders;Lkotlin/jvm/functions/Function1;)Lorg/hildan/krossbow/stomp/headers/StompDisconnectHeaders;
	public static synthetic fun copy$default (Lorg/hildan/krossbow/stomp/headers/StompDisconnectHeaders;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/headers/StompDisconnectHeaders;
}

public abstract interface class org/hildan/krossbow/stomp/headers/StompErrorHeaders : org/hildan/krossbow/stomp/headers/StompHeaders {
	public abstract fun getMessage ()Ljava/lang/String;
	public abstract fun getReceiptId ()Ljava/lang/String;
}

public abstract interface class org/hildan/krossbow/stomp/headers/StompErrorHeadersBuilder : org/hildan/krossbow/stomp/headers/StompErrorHeaders, org/hildan/krossbow/stomp/headers/StompHeadersBuilder {
	public abstract fun getMessage ()Ljava/lang/String;
	public abstract fun getReceiptId ()Ljava/lang/String;
	public abstract fun setMessage (Ljava/lang/String;)V
	public abstract fun setReceiptId (Ljava/lang/String;)V
}

public final class org/hildan/krossbow/stomp/headers/StompErrorHeadersKt {
	public static final fun StompErrorHeaders (Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lorg/hildan/krossbow/stomp/headers/StompErrorHeaders;
	public static final fun StompErrorHeaders (Lkotlin/jvm/functions/Function1;)Lorg/hildan/krossbow/stomp/headers/StompErrorHeaders;
	public static synthetic fun StompErrorHeaders$default (Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/headers/StompErrorHeaders;
	public static synthetic fun StompErrorHeaders$default (Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/headers/StompErrorHeaders;
	public static final fun copy (Lorg/hildan/krossbow/stomp/headers/StompErrorHeaders;Lkotlin/jvm/functions/Function1;)Lorg/hildan/krossbow/stomp/headers/StompErrorHeaders;
	public static synthetic fun copy$default (Lorg/hildan/krossbow/stomp/headers/StompErrorHeaders;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/headers/StompErrorHeaders;
}

public abstract interface class org/hildan/krossbow/stomp/headers/StompHeaders {
	public abstract fun asMap ()Ljava/util/Map;
	public abstract fun get (Ljava/lang/String;)Ljava/lang/String;
	public abstract fun getContentLength ()Ljava/lang/Integer;
	public abstract fun getContentType ()Ljava/lang/String;
	public abstract fun getReceipt ()Ljava/lang/String;
}

public abstract interface class org/hildan/krossbow/stomp/headers/StompHeadersBuilder : org/hildan/krossbow/stomp/headers/StompHeaders {
	public abstract fun getContentLength ()Ljava/lang/Integer;
	public abstract fun getContentType ()Ljava/lang/String;
	public abstract fun getReceipt ()Ljava/lang/String;
	public abstract fun set (Ljava/lang/String;Ljava/lang/String;)V
	public abstract fun setAll (Ljava/util/Map;)V
	public abstract fun setContentLength (Ljava/lang/Integer;)V
	public abstract fun setContentType (Ljava/lang/String;)V
	public abstract fun setReceipt (Ljava/lang/String;)V
}

public abstract interface class org/hildan/krossbow/stomp/headers/StompMessageHeaders : org/hildan/krossbow/stomp/headers/StompHeaders {
	public abstract fun getAck ()Ljava/lang/String;
	public abstract fun getDestination ()Ljava/lang/String;
	public abstract fun getMessageId ()Ljava/lang/String;
	public abstract fun getSubscription ()Ljava/lang/String;
}

public abstract interface class org/hildan/krossbow/stomp/headers/StompMessageHeadersBuilder : org/hildan/krossbow/stomp/headers/StompHeadersBuilder, org/hildan/krossbow/stomp/headers/StompMessageHeaders {
	public abstract fun getAck ()Ljava/lang/String;
	public abstract fun getDestination ()Ljava/lang/String;
	public abstract fun getMessageId ()Ljava/lang/String;
	public abstract fun getSubscription ()Ljava/lang/String;
	public abstract fun setAck (Ljava/lang/String;)V
	public abstract fun setDestination (Ljava/lang/String;)V
	public abstract fun setMessageId (Ljava/lang/String;)V
	public abstract fun setSubscription (Ljava/lang/String;)V
}

public final class org/hildan/krossbow/stomp/headers/StompMessageHeadersKt {
	public static final fun StompMessageHeaders (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lorg/hildan/krossbow/stomp/headers/StompMessageHeaders;
	public static final fun StompMessageHeaders (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/hildan/krossbow/stomp/headers/StompMessageHeaders;
	public static synthetic fun StompMessageHeaders$default (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/headers/StompMessageHeaders;
	public static synthetic fun StompMessageHeaders$default (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/headers/StompMessageHeaders;
	public static final fun copy (Lorg/hildan/krossbow/stomp/headers/StompMessageHeaders;Lkotlin/jvm/functions/Function1;)Lorg/hildan/krossbow/stomp/headers/StompMessageHeaders;
	public static synthetic fun copy$default (Lorg/hildan/krossbow/stomp/headers/StompMessageHeaders;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/headers/StompMessageHeaders;
}

public abstract interface class org/hildan/krossbow/stomp/headers/StompNackHeaders : org/hildan/krossbow/stomp/headers/StompHeaders {
	public abstract fun getId ()Ljava/lang/String;
	public abstract fun getTransaction ()Ljava/lang/String;
}

public abstract interface class org/hildan/krossbow/stomp/headers/StompNackHeadersBuilder : org/hildan/krossbow/stomp/headers/StompHeadersBuilder, org/hildan/krossbow/stomp/headers/StompNackHeaders {
	public abstract fun getId ()Ljava/lang/String;
	public abstract fun getTransaction ()Ljava/lang/String;
	public abstract fun setId (Ljava/lang/String;)V
	public abstract fun setTransaction (Ljava/lang/String;)V
}

public final class org/hildan/krossbow/stomp/headers/StompNackHeadersKt {
	public static final fun StompNackHeaders (Ljava/lang/String;Ljava/lang/String;)Lorg/hildan/krossbow/stomp/headers/StompNackHeaders;
	public static final fun StompNackHeaders (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/hildan/krossbow/stomp/headers/StompNackHeaders;
	public static synthetic fun StompNackHeaders$default (Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/headers/StompNackHeaders;
	public static synthetic fun StompNackHeaders$default (Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/headers/StompNackHeaders;
	public static final fun copy (Lorg/hildan/krossbow/stomp/headers/StompNackHeaders;Lkotlin/jvm/functions/Function1;)Lorg/hildan/krossbow/stomp/headers/StompNackHeaders;
	public static synthetic fun copy$default (Lorg/hildan/krossbow/stomp/headers/StompNackHeaders;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/headers/StompNackHeaders;
}

public abstract interface class org/hildan/krossbow/stomp/headers/StompReceiptHeaders : org/hildan/krossbow/stomp/headers/StompHeaders {
	public abstract fun getReceiptId ()Ljava/lang/String;
}

public abstract interface class org/hildan/krossbow/stomp/headers/StompReceiptHeadersBuilder : org/hildan/krossbow/stomp/headers/StompHeadersBuilder, org/hildan/krossbow/stomp/headers/StompReceiptHeaders {
	public abstract fun getReceiptId ()Ljava/lang/String;
	public abstract fun setReceiptId (Ljava/lang/String;)V
}

public final class org/hildan/krossbow/stomp/headers/StompReceiptHeadersKt {
	public static final fun StompReceiptHeaders (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/hildan/krossbow/stomp/headers/StompReceiptHeaders;
	public static synthetic fun StompReceiptHeaders$default (Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/headers/StompReceiptHeaders;
	public static final fun copy (Lorg/hildan/krossbow/stomp/headers/StompReceiptHeaders;Lkotlin/jvm/functions/Function1;)Lorg/hildan/krossbow/stomp/headers/StompReceiptHeaders;
	public static synthetic fun copy$default (Lorg/hildan/krossbow/stomp/headers/StompReceiptHeaders;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/headers/StompReceiptHeaders;
}

public abstract interface class org/hildan/krossbow/stomp/headers/StompSendHeaders : org/hildan/krossbow/stomp/headers/StompHeaders {
	public abstract fun getDestination ()Ljava/lang/String;
	public abstract fun getTransaction ()Ljava/lang/String;
}

public abstract interface class org/hildan/krossbow/stomp/headers/StompSendHeadersBuilder : org/hildan/krossbow/stomp/headers/StompHeadersBuilder, org/hildan/krossbow/stomp/headers/StompSendHeaders {
	public abstract fun getDestination ()Ljava/lang/String;
	public abstract fun getTransaction ()Ljava/lang/String;
	public abstract fun setDestination (Ljava/lang/String;)V
	public abstract fun setTransaction (Ljava/lang/String;)V
}

public final class org/hildan/krossbow/stomp/headers/StompSendHeadersKt {
	public static final fun StompSendHeaders (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lorg/hildan/krossbow/stomp/headers/StompSendHeaders;
	public static final fun StompSendHeaders (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/hildan/krossbow/stomp/headers/StompSendHeaders;
	public static synthetic fun StompSendHeaders$default (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/headers/StompSendHeaders;
	public static synthetic fun StompSendHeaders$default (Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/headers/StompSendHeaders;
	public static final fun copy (Lorg/hildan/krossbow/stomp/headers/StompSendHeaders;Lkotlin/jvm/functions/Function1;)Lorg/hildan/krossbow/stomp/headers/StompSendHeaders;
	public static synthetic fun copy$default (Lorg/hildan/krossbow/stomp/headers/StompSendHeaders;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/headers/StompSendHeaders;
}

public abstract interface class org/hildan/krossbow/stomp/headers/StompSubscribeHeaders : org/hildan/krossbow/stomp/headers/StompHeaders {
	public abstract fun getAck ()Lorg/hildan/krossbow/stomp/headers/AckMode;
	public abstract fun getDestination ()Ljava/lang/String;
	public abstract fun getId ()Ljava/lang/String;
}

public abstract interface class org/hildan/krossbow/stomp/headers/StompSubscribeHeadersBuilder : org/hildan/krossbow/stomp/headers/StompHeadersBuilder, org/hildan/krossbow/stomp/headers/StompSubscribeHeaders {
	public abstract fun getAck ()Lorg/hildan/krossbow/stomp/headers/AckMode;
	public abstract fun getDestination ()Ljava/lang/String;
	public abstract fun getId ()Ljava/lang/String;
	public abstract fun setAck (Lorg/hildan/krossbow/stomp/headers/AckMode;)V
	public abstract fun setDestination (Ljava/lang/String;)V
	public abstract fun setId (Ljava/lang/String;)V
}

public final class org/hildan/krossbow/stomp/headers/StompSubscribeHeadersKt {
	public static final fun StompSubscribeHeaders (Ljava/lang/String;Ljava/lang/String;Lorg/hildan/krossbow/stomp/headers/AckMode;Ljava/lang/String;Ljava/util/Map;)Lorg/hildan/krossbow/stomp/headers/StompSubscribeHeaders;
	public static final fun StompSubscribeHeaders (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/hildan/krossbow/stomp/headers/StompSubscribeHeaders;
	public static synthetic fun StompSubscribeHeaders$default (Ljava/lang/String;Ljava/lang/String;Lorg/hildan/krossbow/stomp/headers/AckMode;Ljava/lang/String;Ljava/util/Map;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/headers/StompSubscribeHeaders;
	public static synthetic fun StompSubscribeHeaders$default (Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/headers/StompSubscribeHeaders;
	public static final fun copy (Lorg/hildan/krossbow/stomp/headers/StompSubscribeHeaders;Lkotlin/jvm/functions/Function1;)Lorg/hildan/krossbow/stomp/headers/StompSubscribeHeaders;
	public static synthetic fun copy$default (Lorg/hildan/krossbow/stomp/headers/StompSubscribeHeaders;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/headers/StompSubscribeHeaders;
}

public abstract interface class org/hildan/krossbow/stomp/headers/StompUnsubscribeHeaders : org/hildan/krossbow/stomp/headers/StompHeaders {
	public abstract fun getId ()Ljava/lang/String;
}

public abstract interface class org/hildan/krossbow/stomp/headers/StompUnsubscribeHeadersBuilder : org/hildan/krossbow/stomp/headers/StompHeadersBuilder, org/hildan/krossbow/stomp/headers/StompUnsubscribeHeaders {
	public abstract fun getId ()Ljava/lang/String;
	public abstract fun setId (Ljava/lang/String;)V
}

public final class org/hildan/krossbow/stomp/headers/StompUnsubscribeHeadersKt {
	public static final fun StompUnsubscribeHeaders (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/hildan/krossbow/stomp/headers/StompUnsubscribeHeaders;
	public static synthetic fun StompUnsubscribeHeaders$default (Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/headers/StompUnsubscribeHeaders;
	public static final fun copy (Lorg/hildan/krossbow/stomp/headers/StompUnsubscribeHeaders;Lkotlin/jvm/functions/Function1;)Lorg/hildan/krossbow/stomp/headers/StompUnsubscribeHeaders;
	public static synthetic fun copy$default (Lorg/hildan/krossbow/stomp/headers/StompUnsubscribeHeaders;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/hildan/krossbow/stomp/headers/StompUnsubscribeHeaders;
}

public abstract interface class org/hildan/krossbow/stomp/instrumentation/KrossbowInstrumentation {
	public fun onFrameDecoded (Lorg/hildan/krossbow/websocket/WebSocketFrame;Lorg/hildan/krossbow/stomp/frame/StompFrame;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun onStompFrameSent (Lorg/hildan/krossbow/stomp/frame/StompFrame;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun onWebSocketClientError (Ljava/lang/Throwable;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun onWebSocketClosed (Ljava/lang/Throwable;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun onWebSocketFrameReceived (Lorg/hildan/krossbow/websocket/WebSocketFrame;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun plus (Lorg/hildan/krossbow/stomp/instrumentation/KrossbowInstrumentation;)Lorg/hildan/krossbow/stomp/instrumentation/KrossbowInstrumentation;
}

public final class org/hildan/krossbow/stomp/instrumentation/KrossbowInstrumentation$DefaultImpls {
	public static fun onFrameDecoded (Lorg/hildan/krossbow/stomp/instrumentation/KrossbowInstrumentation;Lorg/hildan/krossbow/websocket/WebSocketFrame;Lorg/hildan/krossbow/stomp/frame/StompFrame;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun onStompFrameSent (Lorg/hildan/krossbow/stomp/instrumentation/KrossbowInstrumentation;Lorg/hildan/krossbow/stomp/frame/StompFrame;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun onWebSocketClientError (Lorg/hildan/krossbow/stomp/instrumentation/KrossbowInstrumentation;Ljava/lang/Throwable;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun onWebSocketClosed (Lorg/hildan/krossbow/stomp/instrumentation/KrossbowInstrumentation;Ljava/lang/Throwable;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun onWebSocketFrameReceived (Lorg/hildan/krossbow/stomp/instrumentation/KrossbowInstrumentation;Lorg/hildan/krossbow/websocket/WebSocketFrame;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun plus (Lorg/hildan/krossbow/stomp/instrumentation/KrossbowInstrumentation;Lorg/hildan/krossbow/stomp/instrumentation/KrossbowInstrumentation;)Lorg/hildan/krossbow/stomp/instrumentation/KrossbowInstrumentation;
}

