public final class org/hildan/krossbow/websocket/UnboundedWsListenerFlowAdapter {
	public fun <init> ()V
	public final fun getIncomingFrames ()Lkotlinx/coroutines/flow/Flow;
	public final fun onBinaryMessage-JP2dKIU (Lkotlinx/io/bytestring/ByteString;)Ljava/lang/Object;
	public final fun onClose-Mj0NB7M (ILjava/lang/String;)Ljava/lang/Object;
	public final fun onError (Ljava/lang/String;)V
	public final fun onError (Ljava/lang/Throwable;)V
	public final fun onPing-JP2dKIU (Lkotlinx/io/bytestring/ByteString;)Ljava/lang/Object;
	public final fun onPong-JP2dKIU (Lkotlinx/io/bytestring/ByteString;)Ljava/lang/Object;
	public final fun onTextMessage-JP2dKIU (Ljava/lang/String;)Ljava/lang/Object;
}

public abstract interface class org/hildan/krossbow/websocket/WebSocketClient {
	public static final field Companion Lorg/hildan/krossbow/websocket/WebSocketClient$Companion;
	public abstract fun connect (Ljava/lang/String;Ljava/util/Map;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getSupportsCustomHeaders ()Z
}

public final class org/hildan/krossbow/websocket/WebSocketClient$Companion {
}

public final class org/hildan/krossbow/websocket/WebSocketClient$DefaultImpls {
	public static synthetic fun connect$default (Lorg/hildan/krossbow/websocket/WebSocketClient;Ljava/lang/String;Ljava/util/Map;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public final class org/hildan/krossbow/websocket/WebSocketCloseCodes {
	public static final field BAD_DATA I
	public static final field GOING_AWAY I
	public static final field INSTANCE Lorg/hildan/krossbow/websocket/WebSocketCloseCodes;
	public static final field NORMAL_CLOSURE I
	public static final field NOT_ACCEPTABLE I
	public static final field NO_CLOSE_FRAME I
	public static final field NO_STATUS_CODE I
	public static final field POLICY_VIOLATION I
	public static final field PROTOCOL_ERROR I
	public static final field REQUIRED_EXTENSION I
	public static final field SERVER_ERROR I
	public static final field SERVICE_OVERLOAD I
	public static final field SERVICE_RESTARTED I
	public static final field TLS_HANDSHAKE_FAILURE I
	public static final field TOO_BIG_TO_PROCESS I
}

public final class org/hildan/krossbow/websocket/WebSocketCloseReasonUtilsKt {
	public static final field CLOSE_REASON_MAX_LENGTH_BYTES I
	public static final fun truncateToCloseFrameReasonLength (Ljava/lang/String;)Ljava/lang/String;
	public static final fun truncateUtf8BytesLengthTo (Ljava/lang/String;I)Ljava/lang/String;
}

public abstract interface class org/hildan/krossbow/websocket/WebSocketConnection {
	public abstract fun close (ILjava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getCanSend ()Z
	public abstract fun getHost ()Ljava/lang/String;
	public abstract fun getIncomingFrames ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun getUrl ()Ljava/lang/String;
	public abstract fun sendBinary (Lkotlinx/io/bytestring/ByteString;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun sendText (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class org/hildan/krossbow/websocket/WebSocketConnection$DefaultImpls {
	public static synthetic fun close$default (Lorg/hildan/krossbow/websocket/WebSocketConnection;ILjava/lang/String;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static fun getHost (Lorg/hildan/krossbow/websocket/WebSocketConnection;)Ljava/lang/String;
}

public final class org/hildan/krossbow/websocket/WebSocketConnectionClosedException : org/hildan/krossbow/websocket/WebSocketConnectionException {
	public fun <init> (Ljava/lang/String;ILjava/lang/String;)V
	public final fun getCode ()I
	public final fun getReason ()Ljava/lang/String;
}

public class org/hildan/krossbow/websocket/WebSocketConnectionException : org/hildan/krossbow/websocket/WebSocketException {
	public fun <init> (Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getAdditionalInfo ()Ljava/lang/String;
	public final fun getHttpStatusCode ()Ljava/lang/Integer;
	public final fun getUrl ()Ljava/lang/String;
}

public abstract interface class org/hildan/krossbow/websocket/WebSocketConnectionWithPing : org/hildan/krossbow/websocket/WebSocketConnection {
	public abstract fun sendPing (Lkotlinx/io/bytestring/ByteString;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class org/hildan/krossbow/websocket/WebSocketConnectionWithPing$DefaultImpls {
	public static fun getHost (Lorg/hildan/krossbow/websocket/WebSocketConnectionWithPing;)Ljava/lang/String;
}

public abstract interface class org/hildan/krossbow/websocket/WebSocketConnectionWithPingPong : org/hildan/krossbow/websocket/WebSocketConnectionWithPing {
	public abstract fun sendPong (Lkotlinx/io/bytestring/ByteString;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class org/hildan/krossbow/websocket/WebSocketConnectionWithPingPong$DefaultImpls {
	public static fun getHost (Lorg/hildan/krossbow/websocket/WebSocketConnectionWithPingPong;)Ljava/lang/String;
}

public class org/hildan/krossbow/websocket/WebSocketException : java/lang/Exception {
	public fun <init> (Ljava/lang/String;Ljava/lang/Throwable;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/Throwable;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public abstract class org/hildan/krossbow/websocket/WebSocketFrame {
}

public final class org/hildan/krossbow/websocket/WebSocketFrame$Binary : org/hildan/krossbow/websocket/WebSocketFrame {
	public fun <init> (Lkotlinx/io/bytestring/ByteString;)V
	public final fun component1 ()Lkotlinx/io/bytestring/ByteString;
	public final fun copy (Lkotlinx/io/bytestring/ByteString;)Lorg/hildan/krossbow/websocket/WebSocketFrame$Binary;
	public static synthetic fun copy$default (Lorg/hildan/krossbow/websocket/WebSocketFrame$Binary;Lkotlinx/io/bytestring/ByteString;ILjava/lang/Object;)Lorg/hildan/krossbow/websocket/WebSocketFrame$Binary;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBytes ()Lkotlinx/io/bytestring/ByteString;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/hildan/krossbow/websocket/WebSocketFrame$Close : org/hildan/krossbow/websocket/WebSocketFrame {
	public fun <init> (ILjava/lang/String;)V
	public final fun component1 ()I
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (ILjava/lang/String;)Lorg/hildan/krossbow/websocket/WebSocketFrame$Close;
	public static synthetic fun copy$default (Lorg/hildan/krossbow/websocket/WebSocketFrame$Close;ILjava/lang/String;ILjava/lang/Object;)Lorg/hildan/krossbow/websocket/WebSocketFrame$Close;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCode ()I
	public final fun getReason ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/hildan/krossbow/websocket/WebSocketFrame$Ping : org/hildan/krossbow/websocket/WebSocketFrame {
	public fun <init> (Lkotlinx/io/bytestring/ByteString;)V
	public final fun component1 ()Lkotlinx/io/bytestring/ByteString;
	public final fun copy (Lkotlinx/io/bytestring/ByteString;)Lorg/hildan/krossbow/websocket/WebSocketFrame$Ping;
	public static synthetic fun copy$default (Lorg/hildan/krossbow/websocket/WebSocketFrame$Ping;Lkotlinx/io/bytestring/ByteString;ILjava/lang/Object;)Lorg/hildan/krossbow/websocket/WebSocketFrame$Ping;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBytes ()Lkotlinx/io/bytestring/ByteString;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/hildan/krossbow/websocket/WebSocketFrame$Pong : org/hildan/krossbow/websocket/WebSocketFrame {
	public fun <init> (Lkotlinx/io/bytestring/ByteString;)V
	public final fun component1 ()Lkotlinx/io/bytestring/ByteString;
	public final fun copy (Lkotlinx/io/bytestring/ByteString;)Lorg/hildan/krossbow/websocket/WebSocketFrame$Pong;
	public static synthetic fun copy$default (Lorg/hildan/krossbow/websocket/WebSocketFrame$Pong;Lkotlinx/io/bytestring/ByteString;ILjava/lang/Object;)Lorg/hildan/krossbow/websocket/WebSocketFrame$Pong;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBytes ()Lkotlinx/io/bytestring/ByteString;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/hildan/krossbow/websocket/WebSocketFrame$Text : org/hildan/krossbow/websocket/WebSocketFrame {
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lorg/hildan/krossbow/websocket/WebSocketFrame$Text;
	public static synthetic fun copy$default (Lorg/hildan/krossbow/websocket/WebSocketFrame$Text;Ljava/lang/String;ILjava/lang/Object;)Lorg/hildan/krossbow/websocket/WebSocketFrame$Text;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getText ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/hildan/krossbow/websocket/WebSocketListenerFlowAdapter {
	public fun <init> ()V
	public fun <init> (ILkotlinx/coroutines/channels/BufferOverflow;)V
	public synthetic fun <init> (ILkotlinx/coroutines/channels/BufferOverflow;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getIncomingFrames ()Lkotlinx/coroutines/flow/Flow;
	public final fun onBinaryMessage (Lkotlinx/io/bytestring/ByteString;ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun onBinaryMessage (ZLkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun onBinaryMessage$default (Lorg/hildan/krossbow/websocket/WebSocketListenerFlowAdapter;Lkotlinx/io/bytestring/ByteString;ZLkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static synthetic fun onBinaryMessage$default (Lorg/hildan/krossbow/websocket/WebSocketListenerFlowAdapter;ZLkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun onClose (ILjava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun onError (Ljava/lang/String;)V
	public final fun onError (Ljava/lang/Throwable;)V
	public final fun onPing (Lkotlinx/io/bytestring/ByteString;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun onPong (Lkotlinx/io/bytestring/ByteString;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun onTextMessage (Ljava/lang/String;ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun onTextMessage (ZLkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun onTextMessage$default (Lorg/hildan/krossbow/websocket/WebSocketListenerFlowAdapter;Ljava/lang/String;ZLkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static synthetic fun onTextMessage$default (Lorg/hildan/krossbow/websocket/WebSocketListenerFlowAdapter;ZLkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public final class org/hildan/krossbow/websocket/reconnection/ExponentialBackOff : org/hildan/krossbow/websocket/reconnection/RetryDelayStrategy {
	public synthetic fun <init> (JDILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun <init> (JDLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun computeDelay-5sfh64U (I)J
}

public final class org/hildan/krossbow/websocket/reconnection/FixedDelay : org/hildan/krossbow/websocket/reconnection/RetryDelayStrategy {
	public synthetic fun <init> (JLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun computeDelay-5sfh64U (I)J
}

public final class org/hildan/krossbow/websocket/reconnection/ReconnectConfig {
	public fun <init> ()V
	public fun <init> (ILorg/hildan/krossbow/websocket/reconnection/RetryDelayStrategy;Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function3;Lkotlin/jvm/functions/Function2;)V
	public synthetic fun <init> (ILorg/hildan/krossbow/websocket/reconnection/RetryDelayStrategy;Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function3;Lkotlin/jvm/functions/Function2;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()I
	public final fun component2 ()Lorg/hildan/krossbow/websocket/reconnection/RetryDelayStrategy;
	public final fun component3 ()Lkotlin/coroutines/CoroutineContext;
	public final fun component4 ()Lkotlin/jvm/functions/Function3;
	public final fun component5 ()Lkotlin/jvm/functions/Function2;
	public final fun copy (ILorg/hildan/krossbow/websocket/reconnection/RetryDelayStrategy;Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function3;Lkotlin/jvm/functions/Function2;)Lorg/hildan/krossbow/websocket/reconnection/ReconnectConfig;
	public static synthetic fun copy$default (Lorg/hildan/krossbow/websocket/reconnection/ReconnectConfig;ILorg/hildan/krossbow/websocket/reconnection/RetryDelayStrategy;Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function3;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lorg/hildan/krossbow/websocket/reconnection/ReconnectConfig;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAfterReconnect ()Lkotlin/jvm/functions/Function2;
	public final fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public final fun getDelayStrategy ()Lorg/hildan/krossbow/websocket/reconnection/RetryDelayStrategy;
	public final fun getMaxAttempts ()I
	public final fun getShouldReconnect ()Lkotlin/jvm/functions/Function3;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/hildan/krossbow/websocket/reconnection/ReconnectConfigBuilder {
	public final fun afterReconnect (Lkotlin/jvm/functions/Function2;)V
	public final fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public final fun getDelayStrategy ()Lorg/hildan/krossbow/websocket/reconnection/RetryDelayStrategy;
	public final fun getMaxAttempts ()I
	public final fun reconnectWhen (Lkotlin/jvm/functions/Function3;)V
	public final fun setCoroutineContext (Lkotlin/coroutines/CoroutineContext;)V
	public final fun setDelayStrategy (Lorg/hildan/krossbow/websocket/reconnection/RetryDelayStrategy;)V
	public final fun setMaxAttempts (I)V
}

public final class org/hildan/krossbow/websocket/reconnection/ReconnectConfigKt {
	public static final fun reconnectConfig (Lkotlin/jvm/functions/Function1;)Lorg/hildan/krossbow/websocket/reconnection/ReconnectConfig;
}

public final class org/hildan/krossbow/websocket/reconnection/ReconnectingWebSocketClientKt {
	public static final fun withAutoReconnect (Lorg/hildan/krossbow/websocket/WebSocketClient;ILorg/hildan/krossbow/websocket/reconnection/RetryDelayStrategy;)Lorg/hildan/krossbow/websocket/WebSocketClient;
	public static final fun withAutoReconnect (Lorg/hildan/krossbow/websocket/WebSocketClient;Lkotlin/jvm/functions/Function1;)Lorg/hildan/krossbow/websocket/WebSocketClient;
	public static final fun withAutoReconnect (Lorg/hildan/krossbow/websocket/WebSocketClient;Lorg/hildan/krossbow/websocket/reconnection/ReconnectConfig;)Lorg/hildan/krossbow/websocket/WebSocketClient;
	public static synthetic fun withAutoReconnect$default (Lorg/hildan/krossbow/websocket/WebSocketClient;ILorg/hildan/krossbow/websocket/reconnection/RetryDelayStrategy;ILjava/lang/Object;)Lorg/hildan/krossbow/websocket/WebSocketClient;
}

public abstract interface class org/hildan/krossbow/websocket/reconnection/RetryDelayStrategy {
	public abstract fun computeDelay-5sfh64U (I)J
}

public final class org/hildan/krossbow/websocket/reconnection/WebSocketReconnectionException : org/hildan/krossbow/websocket/WebSocketConnectionException {
	public fun <init> (Ljava/lang/String;ILjava/lang/Throwable;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;ILjava/lang/Throwable;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getCause ()Ljava/lang/Throwable;
	public final fun getNAttemptedReconnections ()I
}

