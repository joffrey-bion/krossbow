name: Manual release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "New version (and git tag)"
        required: true

jobs:
  release:
    runs-on: macos-latest # For darwin publications
    strategy:
      matrix:
        jdk-version: [ 11 ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK ${{ matrix.jdk-version }}
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.jdk-version }}

      # Docker is not installed on GitHub's MacOS hosted workers due to licensing issues
      # (and it's necessary to run Autobahn tests)
      - name: Setup docker and docker-compose (missing on MacOS)
        if: runner.os == 'macos'
        run: |
          brew install docker docker-compose
          
          # Using mount-type 9p to allow the containers launched via docker-compose to chown
          # https://github.com/abiosoft/colima/issues/54#issuecomment-1250217077
          colima start --mount-type 9p
          
          # Loosen permissions for directories mounted in containers to workaround permission issues that remain
          # when using the 9p filesystem (https://github.com/joffrey-bion/krossbow/issues/282)
          chmod 777 autobahn-tests/test-server/config
          mkdir -p autobahn-tests/build/autobahn/reports
          chmod 777 autobahn-tests/build/autobahn/reports

      - name: Test build before release
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build

      - name: Generate Change Log
        uses: gradle/gradle-build-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          arguments: generateChangelog -Pversion=${{ inputs.version }}

      - name: Commit and Push Change Log
        id: changelog-commit
        run: |
          git config user.name '${{ github.actor }}'
          git config user.email '${{ github.actor }}@users.noreply.github.com'
          git add CHANGELOG.md
          git commit -m "Version ${{ inputs.version }}"
          git push
          echo "sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Create Release and Tag
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GH_PAT }} # using personal token to trigger publish workflow
          tag_name: ${{ inputs.version }}
          target_commitish: ${{ steps.changelog-commit.outputs.sha }}
          body_path: build/reports/changelog/latest-release-body.md
