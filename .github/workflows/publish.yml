name: Publish version

on:
  release:
    types:
      - created

jobs:
  publish:
    runs-on: macos-latest # For darwin tests
    strategy:
      matrix:
        jdk-version: [ 11 ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK ${{ matrix.jdk-version }}
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.jdk-version }}

      # Docker is not installed on GitHub's MacOS hosted workers due to licensing issues
      # (and it's necessary to run Autobahn tests)
      - name: Setup docker and docker-compose (missing on MacOS)
        if: runner.os == 'macos'
        run: |
          brew install docker docker-compose
          
          # Using mount-type 9p to allow the containers launched via docker-compose to chown
          # https://github.com/abiosoft/colima/issues/54#issuecomment-1250217077
          colima start --mount-type 9p
          
          # Loosen permissions for directories mounted in containers to workaround permission issues that remain
          # when using the 9p filesystem (https://github.com/joffrey-bion/krossbow/issues/282)
          chmod 777 autobahn-tests/test-server/config
          mkdir -p autobahn-tests/build/autobahn/reports
          chmod 777 autobahn-tests/build/autobahn/reports

      # The publishToSonatype task and the repository release need to be in the same Gradle call
      # so that the closeAndRelease task knows which staging repository was created by publishToSonatype
      - name: Build and publish to OSS Sonatype and then Maven Central
        uses: gradle/gradle-build-action@v2
        env:
          # GPG keys for signing plugin (sign maven artifacts)
          # see https://docs.gradle.org/current/userguide/signing_plugin.html#sec:in-memory-keys
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_SECRET_ASCII_ARMORED }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.GPG_PASSWORD }}
          # Credentials implicitly read by the gradle-nexus-publish-plugin
          # https://github.com/gradle-nexus/publish-plugin#publishing-to-maven-central-via-sonatype-ossrh
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.OSSRH_USER_TOKEN }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.OSSRH_KEY }}
        with:
          arguments: |
            publishToSonatype
            closeAndReleaseSonatypeStagingRepository
            -Pversion=${{ github.event.release.tag_name }}
